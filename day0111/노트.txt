jquery의 반복문

$.each(배열, function(index, item){});
$(배열).each(function(index, item){});

- 배열에는 
	데이터의 배열이 올 수도 있고
	노드(html태그)의 배열이 올 수도 있습니다.
	
-------------------------------------------------------
jquery 충돌방지
	$기호를 jquery가 아닌 다른 프레임워크에서도 사용할 때에
	충돌을 방지하기 위하여 다음과 같이
	$대신에 다른 식별자로 바꾸어 사용할 수 있습니다.
	
	$.noConflict();
	var J = jQuery;
	J(function(){
		J("h1").addClass("high_light");
	});
	
------------------------------------------------------------------------
	
메서드 체이닝
	==> 여러개의 함수를 계속 연결하여 호출하는 것을 말합니다.

$("h3").css("background","orange").filter(":even")
.css("color","white").end().filter(":odd").css("color","red");

end()함수
	==> 메서드 체이닝에서
			선택한 범위를 한단계 앞으로 돌려 놓는 함수입니다.
			

-----------------------------------------------------------------
add()함수
	메서드 체이닝에서 선택의 범위를 추가하고자 할 때에 사용합니다.
	
	$("h1").css("background","gray").add("h2").css("float","left");
	

-----------------------------------------------------------------------
서로 다른 컴퓨터끼리 데이터를 주고 받는 형식
(자바스크립트에서 Ajax 통신으로  서버에 데이터를 요구 하면 서버가 응답하는 형식) 
	- csv(comma seperator value)
		값을 컴마로 분리해서 표현하는 방식
		
		홍길동,20,서울
		이순신,40,인천
		
	- xml(Extensable Markup Language)
		그 데이터가 무엇인지 태크로 표시해주는 방식
		<members>
			<member>
				<name>홍길동</name>
				<age>20</age>
				<addr>서울</addr>
			</member> 
			<member>
				<name>이순신</name>
				<age>40</age>
				<addr>인천</addr>
			</member> 
		</members>
		
		xml의 태그는 열었으면 반드시 닫아 주어야 합니다.
			그리고 포함관계가 일치해야 합니다.
			또, 반드시 루트노드는 하나이어야 합니다.
			
			이러한 규칙을 지키는 xml을 well formed 하다고 합니다.
		
		
	- json(JavaScript Object Notation)
		자바스크립의 객체의 형태로 데이터를 표현하는 방식을 말합니다.	
		[
			{
				name:"홍길동",
				age:20,
				addr:"서울"		
			},
			{
				name:"이순신",
				age:40,
				addr:"인천"		
			},
			
		]
				 	
------------------------------------------------------
<%@ page language="java" contentType="text/plain; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
String xml = "";
xml += 		"<member>";
xml += 			"<name>홍길동</name>";
xml += 			"<age>20</age>";
xml += 		"</member>";
%>

<%= xml %>

위와 같이 서버가 
	text/plain으로 응답하면
	자바스크립트에서 
		받아오는 데이터는 문자열이기 때문에 
		parseXML로 변환한 후에 처리해야 합니다.
		
		
--------------------------------------------------------------

<%@ page language="java" contentType="application/xml; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
String xml = "";
xml += 		"<member>";
xml += 			"<name>홍길동</name>";
xml += 			"<age>20</age>";
xml += 		"</member>";
%>

<%= xml %>		
	
위와 같이 서버의 응답방식이 
	application/xml이면
	자바스크립트에서 Ajax통신으로 받아온 데이가 xml객체 이기 때문에 
	parseXML 따로 할 필요가 없습니다.
	
----------------------------------------------------------------
	노드의 속성을 설정하고 읽어오기
	
	attr("속성명", "값")		속성값을 설정하기
	attr("속성명")			속성값을 읽어오기
	
		
--------------------------------------------------------------------

$(선택자).html();
$(선택자).text();
$(선택자).val();
$(선택자).css("속성명");
$(선택자).attr("속성명");

위의 함수들은 모두 값을 읽어 오는 용도로 사용합니다.
	만약 선택자가 배열일때에 
	맨첫번째 요소의 값을 읽어옵니다.

------------------------------------------------------------------

attr 함수의 다양한 형태

1. $(선택자).attr(속성명,값);
2. $(선택자).attr({});
3. $(선택자).attr(속성명,function(){     ~~~~ return 값;   });



1번 2번 방식은 선택자가 배열일때 모두 동일하게 속성이 설정됩니다.
만약 선택자가 배열일때 각각 다른 속성값을 설정하려면 attr함수에 속성값을 반환하는 콜백함수를 
	사용할 수 있어요.

---------------------------------------------------------

만약에 여러개의 속성을 설정해야 한다면
	attr(속성1,값);
	attr(속성2,값);
	attr(속성2,값);
		속성의 수 만큼 attr함수를 호출하는 것은 번거로울 수 있어요.
		그래서 다음과 같이 객체를 표현하여 한꺼번에 여러개의 속성값을 설정할 수 있어요.
		
	attr({
		속성1:값,
		속성2:값,
		속성3:값
	})













-------------------------------------------------
text함수와 html함수
	모두 태그에 나타내는 글자를 설정하거나 읽어올때 사용합니다.
	
	$(선택자).text(문자열);
	$(선택자).html(문자열);
							==> 글자를 설정합니다.
							
							
	$(선택자).text();
	$(선택자).html();
							==> 글자를 읽어옵니다.
		


	text의 html의 차이
		글자를 설정할 때에 
		문자열이 html태그를 표현하는 문자열일때에 
			html은 html의 결괄를 나타내고
			text는 글자로 처리합니다.

		선택자가 배열이고 글자를 읽어올 때에
			html은 맨첫번째 요소의 글자를 읽어오고
			text는 모든 요소의 글자를 연결하여 반환합니다. 
			



---------------------------------------------------------
html 태그를 삭제하기
	
	remove함수
		==> 객체 자신을 삭제하는 함수
		
	empty함수
		==> 객체 안에 포함된 후손 태그들을 모두 삭제하는 함수





	
	
	
	
	
	
	
	
	
	
	
	
	